{"version":3,"sources":["components/Note.js","services/notes.js","components/Notifcation.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"gOAaiBA,EAXJ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,K,gBCS3B,EAfA,WAEb,OADgBK,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCD1BK,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKb,UAAU,SACZa,ICyFMC,G,MA3FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAOhBC,qBAAU,WACRC,IAEKpB,MAAK,SAAAqB,GACNT,EAASS,QAEZ,IAEHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAyCQC,EAAcV,EACdJ,EACAA,EAAMe,QAAO,SAAAnC,GAAI,OAAIA,EAAKG,aAE9B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcc,QAASS,IACvB,6BACE,4BAAQpB,QAAS,kBAAMmB,GAAYD,KAAnC,QACMA,EAAU,YAAc,QAG9B,4BACKU,EAAYE,KAAI,SAACpC,EAAMqC,GAAP,OACb,kBAAC,EAAD,CACAC,IAAKD,EACLrC,KAAMA,EACNC,iBAAkB,kBA3DT,SAAAa,GACzB,IAAMd,EAAOoB,EAAMmB,MAAK,SAAAC,GAAC,OAAIA,EAAE1B,KAAOA,KAChC2B,EAAW,2BAAQzC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD0B,EACUY,GAAahC,MAAK,SAAAiC,GACxBrB,EAASD,EAAMgB,KAAI,SAAApC,GAAI,OAAIA,EAAKc,KAAOA,EAAKd,EAAO0C,SAEpDC,OAAM,SAAAC,GACLjB,EAAgB,SAAD,OACJ3B,EAAKK,QADD,sCAGfwC,YAAW,WACTlB,EAAgB,QACf,KACHN,EAASD,EAAMe,QAAO,SAAAK,GAAC,OAAIA,EAAE1B,KAAOA,SA4CAgC,CAAmB9C,EAAKc,WAI1D,0BAAMiC,SA5CE,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB7C,QAASiB,EACT6B,MAAM,IAAIC,MAAOC,cACjBlD,UAAWmD,KAAKC,SAAW,IAG7B1B,EACUqB,GACLzC,MAAK,SAAAiC,GACNrB,EAASD,EAAMoC,OAAOd,IACtBnB,EAAW,SAiCP,2BACEkC,MAAOnC,EACPoC,SA/Be,SAACV,GACtBjB,QAAQC,IAAIgB,EAAMW,OAAOF,OACzBlC,EAAWyB,EAAMW,OAAOF,UA+BpB,4BAAQG,KAAK,UAAb,YCvFZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0d207257.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n  export default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update \r\n}","import React from \"react\"\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from \"./components/Notifcation\"\r\nimport \"./index.css\"\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]) \r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  \r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n        .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n  \r\n  console.log('render', notes.length, 'notes')\r\n  \r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(changedNote).then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n        .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n    const handleNoteChange = (event) => {\r\n        console.log(event.target.value)\r\n        setNewNote(event.target.value)\r\n      }\r\n\r\n      \r\n    const notesToShow = showAll\r\n        ? notes\r\n        : notes.filter(note => note.important)\r\n  \r\n      return (\r\n        <div>\r\n          <h1>Notes</h1>\r\n          <Notification message={errorMessage} />\r\n          <div>\r\n            <button onClick={() => setShowAll(!showAll)}>\r\n            show {showAll ? 'important' : 'all' }\r\n            </button>\r\n         </div>  \r\n            <ul>\r\n                {notesToShow.map((note, i) =>\r\n                    <Note\r\n                    key={i}\r\n                    note={note} \r\n                    toggleImportance={() => toggleImportanceOf(note.id)}\r\n                    />\r\n                )}\r\n            </ul>\r\n          <form onSubmit={addNote}>\r\n            <input\r\n              value={newNote}\r\n              onChange={handleNoteChange}\r\n            />\r\n            <button type=\"submit\">save</button>\r\n          </form>   \r\n        </div>\r\n      )\r\n    }\r\n\r\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\"\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}